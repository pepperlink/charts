controllers:
  main:
    containers:
      main:
        image:
          repository: vikunja/vikunja
          tag: ""
        # Define environment variables for the app.
        # You can configure Vikunja with envvars or with a configuration file or a combination of the two.
        # A standard installation shoud be fine with envvar config, but some advanced
        # settings may require a configuration file.
        # If you prefer a configuration file, you can use vikunjaConfig at the bottom of this file.
        #
        # You can find the configuration options in the [Vikunja docs](https://vikunja.io/docs/config-options).
        env:
          # If you are using the chart's ingress, you can leave the public URL unset here.
          # VIKUNJA_SERVICE_PUBLICURL: chart-example.local
          VIKUNJA_TIMEZONE: "UTC"
        # You can define sensitive configurtion settings in a pre-created secret.
        # envFrom:
        #   - secretRef:
        #       name: vikunja-secret

serviceAccount:
  create: false

service:
  # -- Configures service settings for the chart.
  # @default -- See [values.yaml](./values.yaml)
  main:
    controller: main
    ports:
      http:
        port: 3456

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  main:
    enabled: false
    annotations:
      # nginx.ingress.kubernetes.io/proxy-body-size: 64m
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            service:
              identifier: main
              port: http
    tls:
      - secretName: chart-example.local
        hosts:
          - chart-example.local

persistence:
  data:
    enabled: true
    retain: true
    path: /app/vikunja/files
    accessMode: ReadWriteOnce
    size: 5Gi
    advancedMounts:
      main:
        main:
          - path: /app/vikunja/files

# By default, the chart will launch vikunja with a sqlite database.
# If you want to use a different database, you can enable and configure the database subcharts here.
# The chart will pull in the bitnami chart for the database and app's database envs will be set for you.
# Choose either postgresql or mariadb, but not both.
# If you already have a database that you'd like to use, do NOT configure it here, but choose either
# the vikunjaConfig section at the bottom of this file or use environment variables.

postgresql:
  enabled: false
  auth:
    database: vikunja
    postgresPassword: changeme
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      # size: 8Gi

mariadb:
  enabled: false
  auth:
    database: vikunja
    username: vikunja
    password: changeme
    rootPassword: changeme
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      # size: 8Gi

# Vikunja runs fine without Redis, but it's recommended to use it for performance reasons.
# You can enable the bitnami redis chart here.
# If you want to use your own redis instance, you can configure it in the vikunjaConfig section
# at the bottom of this file or use environment variables.
redis:
  enabled: false
  auth:
    enabled: true
    username: ""
    # Use an existing secret for redis auth.
    # The secret name can vary, but the password key must be redis-password.
    # existingSecret: vikunja-redis
    # existingSecretPasswordKey: redis-password
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 0

# Any entries here will end up in a configMap that is mounted to config.yaml in the app.
# You can use this to configure Vikunja with a configuration file, for instance if you need
# to configure advanced settings.

# You can find the configuration options in the [Vikunja docs](https://vikunja.io/docs/config-options).
vikunjaConfig:
  service:
    timezone: "UTC"
