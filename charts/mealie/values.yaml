# Default values for mealie.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/mealie-recipes/mealie
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

environment:
  timezone: "UTC"

config:
  allowSignup: "false"
  apiDocs: "true"
  baseURL: "http://localhost:8080"
  defaultGroup: "Home"
  demo: "false"
  loglevel: INFO
  db:
    engine: sqlite # postgres or sqlite
    postgres:
      user: mealie
      password: mealie
      server: postgres
      port: 5432
      db: mealie
  email:
    smtpHost:
    smtpPort: 587
    smtpFromName: Mealie
    smtpAuthStrategy: TLS
    smtpFromEmail:
    smtpUser:
    smtpPassword:
  ldap:
    enabled: "false"
    # adminFilter: ""
    # baseDN: ""
    # caCertfile: ""
    # enableStartTLS: "false"
    # idAttribute: ""
    # mailAttribute: ""
    # nameAttribute: ""
    # queryBind: ""
    # queryPassword: ""
    # serverURL: ""
    # tlsInsecure: "false"
    # userFilter: ""
  oidc:
    enabled: "false"
    adminGroup: ""
    autoRedirect: "false"
    clientID: ""
    configurationURL: ""
    providerName: ""
    rememberMe: "false"
    signupEnabled: "false"
    userGroup: ""
  web:
    gunicorn: "false"
    workersPerCore: "0.5"
    maxWorkers: "1"
    webConcurrency: "1"
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    http: 8080
    api: 9000

ingress:
  internal:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: mealie.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  external:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: mealie.external
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  media:
    enabled: false
    # storageClass: "-"
    accessMode: ReadWriteMany
    annotations: {}
    size: 10Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
