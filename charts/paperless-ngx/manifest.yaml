---
# Source: paperless-ngx/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: paperless-ngx
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
secrets:
  - name: paperless-ngx-sa-token
---
# Source: paperless-ngx/templates/common.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: paperless-ngx-sa-token
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    kubernetes.io/service-account.name: paperless-ngx
---
# Source: paperless-ngx/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-ngx-consume
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: paperless-ngx/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-ngx-data
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Gi"
---
# Source: paperless-ngx/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-ngx-export
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: paperless-ngx/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-ngx-media
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Gi"
---
# Source: paperless-ngx/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/service: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/name: paperless-ngx
---
# Source: paperless-ngx/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: paperless-ngx
      app.kubernetes.io/instance: paperless-ngx
  template:
    metadata:
      annotations: 
        checksum/secrets: 4141e6981f3b767e75a4e744858b9ff414dba5d0ef6afd761f7700061fb6e32e
      labels: 
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: paperless-ngx
        app.kubernetes.io/name: paperless-ngx
    spec: 
      enableServiceLinks: false
      serviceAccountName: paperless-ngx
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers: 
        - env:
          - name: PAPERLESS_OCR_LANGUAGE
            value: nld+eng
          - name: PAPERLESS_OCR_MODE
            value: skip
          - name: PAPERLESS_OCR_SKIP_ARCHIVE_FILE
            value: with_text
          - name: PAPERLESS_PORT
            value: "8000"
          - name: PAPERLESS_SECRET_KEY
            value: z9tb33ftivxjzbxv3rxa178plrmfx869
          - name: PAPERLESS_TIME_ZONE
            value: Europe/Amsterdam
          - name: PAPERLESS_URL
            value: https://paperless.pepperlink.nl
          - name: TZ
            value: Europe/Amsterdam
          envFrom:
          - secretRef:
              name: paperless-secret
          image: ghcr.io/paperless-ngx/paperless-ngx:2.8.6
          name: main
          volumeMounts:
          - mountPath: /consume
            name: consume
          - mountPath: /data
            name: data
          - mountPath: /export
            name: export
          - mountPath: /media
            name: media
      volumes: 
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-ngx-consume
        - name: data
          persistentVolumeClaim:
            claimName: paperless-ngx-data
        - name: export
          persistentVolumeClaim:
            claimName: paperless-ngx-export
        - name: media
          persistentVolumeClaim:
            claimName: paperless-ngx-media
---
# Source: paperless-ngx/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ngx
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/version: 2.8.6
    helm.sh/chart: paperless-ngx-0.0.1
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    gethomepage.dev/description: Scan your documents and never save paper again.
    gethomepage.dev/enabled: true
    gethomepage.dev/group: Pepperlink
    gethomepage.dev/icon: paperless-ngx.png
    gethomepage.dev/name: paperless ngx
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "paperless.pepperlink.nl"
      secretName: "paperless-tls"
  rules:
    - host: "paperless.pepperlink.nl"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: paperless-ngx
                port:
                  number: 8000
